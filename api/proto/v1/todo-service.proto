syntax = "proto3";
package v1;

option go_package = "./v1";

import "google/protobuf/timestamp.proto";

message Todo {
    int64 id = 1;
    string title = 2;
    string description = 3;
    google.protobuf.Timestamp reminder = 4;
}

message CreateRequest {
    // API versioning
    string api = 1;

    // Task entity to add
    Todo todo = 2;
}

message CreateResponse {
    // API versioning
    string api = 1;

    // ID of created task
    int64 id = 2;
}

// Request data to read todo task
message ReadRequest {
    // API versioning
    string api = 1;

    // Unique integer identifier of the todo task
    int64 id = 2;
}

// Contains todo task data specified by ID request
message ReadResponse {
    // API versioning
    string api = 1;

    // Task entity read by ID
    Todo todo = 2;
}

// Request data to read todo task by title
message ReadByTitleRequest {
    // API versioning
    string api = 1;

    string title = 2;
}

// Contains list of all todo tasks matched
message ReadByTitleResponse{
    // API versioning
    string api = 1;

    repeated Todo todos = 2;
}

// Request data to update todo task
message UpdateRequest{
    // API versioning
    string api = 1;

    // Task entity to update
    Todo todo = 2;
}

// Contains status of update operation
message UpdateResponse{
    // API versioning
    string api = 1;

    // Contains number of entities have beed updated
    // Equals 1 in case of succesfull update
    int64 updated = 2;
}

// Request data to delete todo task
message DeleteRequest{
    // API versioning
    string api = 1;

    // Unique integer identifier of the todo task to delete
    int64 id = 2;
}

// Contains status of delete operation
message DeleteResponse{
    // API versioning
    string api = 1;

    // Contains number of entities have beed deleted
    // Equals 1 in case of succesfull delete
    int64 deleted = 2;
}

// Request data to read all todo task
message ReadAllRequest{
    // API versioning
    string api = 1;
}

// Contains list of all todo tasks
message ReadAllResponse{
    // API versioning
    string api = 1;

    // List of all todo tasks
    repeated Todo todos = 2;
}

service TodoService {
    // Create new todo task
    rpc Create(CreateRequest) returns (CreateResponse);

    // Read todo task
    rpc Read(ReadRequest) returns (ReadResponse);

    // Update todo task
    rpc Update(UpdateRequest) returns (UpdateResponse);

    // Delete todo task
    rpc Delete(DeleteRequest) returns (DeleteResponse);

    // Read all todo tasks
    rpc ReadAll(ReadAllRequest) returns (ReadAllResponse);

    // Read todo tasks by title
    rpc ReadByTitle(ReadByTitleRequest) returns (ReadByTitleResponse);
}